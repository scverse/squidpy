[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
name = "squidpy"
dynamic = ["version"]
description = "Spatial Single Cell Analysis in Python"
readme = "README.rst"
requires-python = ">=3.9"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "License :: OSI Approved :: BSD License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Typing :: Typed",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Environment :: Console",
    "Framework :: Jupyter",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Visualization",
]
keywords = [
    "single-cell",
    "bio-informatics",
    "spatial transcriptomics",
    "spatial data analysis",
    "image analysis",
    "spatial data analysis",
]
authors = [
    {name = "Giovanni Palla"},
    {name = "Michal Klein"},
    {name = "Hannah Spitzer"},
]
maintainers = [
    {name = "Giovanni Palla", email = "giovanni.palla@helmholtz-muenchen.de"},
    {name = "Michal Klein", email = "michal.klein@helmholtz-muenchen.de"}
]

dependencies = [
   "aiohttp>=3.8.1",
   "anndata>=0.9",
   "cycler>=0.11.0",
   "dask-image>=0.5.0",
   "dask[array]>=2021.02.0",
   "docrep>=0.3.1",
   "fsspec>=2021.11.0",
   "leidenalg>=0.8.2",
   "matplotlib>=3.3",
   "matplotlib-scalebar>=0.8.0",
   "networkx>=2.6.0",
   "numba>=0.56.4",
   "numpy>=1.23.0",
   "omnipath>=1.0.7",
   "pandas>=2.1.0",
   "Pillow>=8.0.0",
   "scanpy>=1.9.3",
   "scikit-image>=0.20",
   # due to https://github.com/scikit-image/scikit-image/issues/6850 breaks rescale ufunc
   "scikit-learn>=0.24.0",
   "statsmodels>=0.12.0",
   # https://github.com/scverse/squidpy/issues/526
   "tifffile!=2022.4.22",
   "tqdm>=4.50.2",
   "validators>=0.18.2",
   "xarray>=0.16.1",
   "zarr>=2.6.1",
   "spatialdata>=0.2.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
]
test = [
    "pytest>=7",
    "pytest-xdist>=3",
    "pytest-mock>=3.5.0",
    "pytest-cov>=4",
    "coverage[toml]>=7",
]
docs = [
    "ipython",
    "ipywidgets>=8.0.0",
    "sphinx>=5.3",
    "sphinx-autodoc-annotation",
    "sphinx-autodoc-typehints>=1.10.3",
    "sphinx_rtd_theme",
    "sphinxcontrib-bibtex>=2.3.0",
    "sphinxcontrib-spelling>=7.6.2",
    "nbsphinx>=0.8.1",
    "myst-nb>=0.17.1",
    "sphinx_copybutton>=0.5.0",
]

[project.urls]
Homepage = "https://github.com/scverse/squidpy"
"Bug Tracker" = "https://github.com/scverse/squidpy/issues"
Documentation = "https://squidpy.readthedocs.io/en/stable"
"Source Code" = "https://github.com/scverse/squidpy"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools_scm]

[tool.hatch.version]
source = "vcs"

[tool.ruff]
line-length = 120
exclude = [
    ".git",
    ".tox",
    "__pycache__",
    "build",
    "docs/_build",
    "dist",
    "setup.py"
]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
ignore = [
    # line too long -> we accept long comment lines; formatter gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix, i, j, k, l is reasonable indexing notation
    "E741",
    # Missing docstring in public package
    "D104",
    # ... imported but unused
    "F401",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Do not perform function calls in argument defaults.
    "B008",
    # Missing docstring in magic method
    "D105",
    # Missing blank line before section
    "D411",
    # D100 Missing docstring in public module
    "D100",
    # D107 Missing docstring in __init__,
    "D107",
    # B008 Do not perform function calls in argument defaults.
    "B008",
    # B024 Do not use `__class__` for string comparisons.
    "B024",
    ## Flake8 rules not supported by ruff:
    # RST201 Block quote ends without a blank line; unexpected unindent.
    # "RST201",
    # RST301 Unexpected indentation.
    # "RST301",
    # RST306 Unknown target name.
    # "RST306",
    # RST203 Definition list ends without a blank line; unexpected unindent.
    # "RST203",
    # line break before a binary operator -> black does not adhere to PEP8
    # "W503",
    # line break occured after a binary operator -> black does not adhere to PEP8
    # "W504",
    # whitespace before : -> black does not adhere to PEP8
    # "E203",
    # whitespace before : -> black does not adhere to PEP8
    # "E203",
    # missing whitespace after ,', ';', or ':' -> black does not adhere to PEP8
    # "E231",
    # continuation line over-indented for hanging indent -> black does not adhere to PEP8
    # "E126",
    # inline comment should start with '#' -> Scanpy allows them for specific explanations
    # "E266",
    # format string does contain unindexed parameters
    # "P101",
    # indentation is not a multiple of 4
    # "E111",
    # "E114",
]
select = [
    "I", # isort
    "E", # pycodestyle
    "F", # pyflakes
    "W", # pycodestyle
    # below are not autofixed
    "UP", # pyupgrade
    "C4", # flake8-comprehensions
    "B", # flake8-bugbear
    "BLE", # flake8-blind-except
]
unfixable = ["B", "C4", "BLE"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["D104", "F401"]
"tests/*"= ["D"]
"docs/*"= ["D","B"]
"src/squidpy/pl/_ligrec.py"= ["D","B"]
"src/squidpy/_constants/_pkg_constants.py"= ["D101","D102","D106"]
"src/squidpy/_constants/_constants.py"= ["D101"]
"src/squidpy/pl/_interactive/_widgets.py"= ["D"]
"src/squidpy/pl/_interactive/interactive.py"= ["F","E"]
".scripts/ci/download_data.py"= ["D","B"]
# "squidpy/*.py"= ["RST303"]

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports.
ban-relative-imports = "all"
