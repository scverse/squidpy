[flake8]
per-file-ignores =
    */__init__.py: D104, F401
    tests/*: D
    squidpy/constants/_pkg_constants.py: D102
# D104 Missing docstring in public package
# F401 ... imported but unused


# D100 D100 Missing docstring in public module
# D107 Missing docstring in __init__
# B008 Do not perform function calls in argument defaults.
# W503 line break before binary operator
# D105 Missing docstring in magic method
# E203 whitespace before ':'
ignore = D100,D107,B008,W503,D105,E203
exclude =
    .git
    .tox
    build
    dist
    __pycache__
    setup.py
max_line_length = 120
filename = *.py

[pytest]
python_files = test_*.py
testpaths = tests/
xfail_strict = true
addopts =
    -n auto

filterwarnings =
    ignore::UserWarning
    ignore:Using or importing the ABCs from 'collections':DeprecationWarning
    ignore:Converting `np.inexact`:DeprecationWarning
    ignore:the matrix subclass is:PendingDeprecationWarning

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos

[tox]
isolated_build = True
envlist =
    covclean
    lint
    py{37,38,39}-{linux,macos}
    coverage
    readme
    check-docs
    docs
skip_missing_interpreters=true

[testenv]
platform =
    linux: linux
    macos: (osx|darwin)
deps =
    pytest
    pytest-xdist
    pytest-cov
    astropy
    esda
    libpysal
passenv = TOXENV CI CODECOV_* GITHUB_ACTIONS
usedevelop = true
commands = pytest --cov --cov-append --cov-report=term-missing --cov-config={toxinidir}/.coveragerc --ignore docs/ {posargs:-vv}

[testenv:covclean]
description = Clean coverage files.
deps = coverage
skip_install = True
commands = coverage erase

[testenv:coverage]
description = Report the coverage difference.
deps =
    coverage
    diff_cover
skip_install = true
depends = py{37,38,39}-{linux,macos}
parallel_show_output = True
commands =
    coverage report --omit="tox/*"
    coverage xml --omit="tox/*" -o {toxinidir}/coverage.xml
    diff-cover --compare-branch origin/master {toxinidir}/coverage.xml

[testenv:lint]
description = Perform linting.
basepython = python3.8
deps = pre-commit>=2.7.1
skip_install = true
commands =
    pre-commit run --all-files --show-diff-on-failure {posargs:}

[testenv:check-docs]
description = Check the links in the docs.
basepython = python3.8
#deps =
#    sphinxcontrib-spelling
#    pyenchant
extras = docs
whitelist_externals = sphinx-build
commands =
#    sphinx-build -b spelling {toxinidir}/docs/source {toxinidir}/docs/build/spellcheck
#    python -c 'import pathlib; print(f"Possible spelling mistakes are available under:", pathlib.Path(f"{toxinidir}") / "docs" / "build" / "linkcheck")'
    sphinx-build -q -W --keep-going -b linkcheck {toxinidir}/docs/source {toxinidir}/docs/build/linkcheck

[testenv:docs]
description = Build the documentation.
basepython = python3.8
extras = docs
whitelist_externals = sphinx-build
commands =
    sphinx-build --color -b html {toxinidir}/docs/source {toxinidir}/docs/build/html
    python -c 'import pathlib; print(f"Documentation is available under:", pathlib.Path(f"{toxinidir}") / "docs" / "build" / "html" / "index.html")'

[testenv:readme]
description = Check if README renders on PyPI.
basepython = python3.8
deps = twine >= 1.12.1
skip_install = true
commands = pip wheel -q -w {envtmpdir}/build --no-deps .
           twine check {envtmpdir}/build/*
