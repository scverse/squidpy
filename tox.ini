[pytest]
python_files = test_*.py
testpaths = tests/
xfail_strict = true
qt_api=pyqt5
; addopts = -n auto

filterwarnings =
    ignore::UserWarning
    ignore:Using or importing the ABCs from 'collections':DeprecationWarning
    ignore:Converting `np.inexact`:DeprecationWarning
    ignore:the matrix subclass is:PendingDeprecationWarning
    ignore:Please use:DeprecationWarning:dask_image.*
    ignore:Auto-removal of grids by:DeprecationWarning:
    ignore:Support for passing numbers through unit converters:DeprecationWarning
    ignore:distutils Version classes are deprecated:DeprecationWarning
    ignore::anndata.OldFormatWarning

[coverage:run]
branch = true
parallel = true
source = squidpy
omit =
    */__init__.py
    */_version.py
    squidpy/pl/_interactive/*

[coverage:paths]
source =
    squidpy
    */site-packages/squidpy

[coverage:report]
exclude_lines =
    \#.*pragma:\s*no.?cover

    ^if __name__ == .__main__.:$

    ^\s*raise AssertionError\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
show_missing = true
precision = 2
skip_empty = True
sort = Miss

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos

[tox]
isolated_build = True
envlist =
    covclean
    lint
    py{3.9,3.10}-{linux,macos}
    coverage
    readme
    check-docs
    docs
skip_missing_interpreters = true

[testenv]
platform =
    linux: linux
    macos: (osx|darwin)
deps =
    pytest
    pytest-xdist
    pytest-cov
    pytest-qt
    pytest-mock
    pytest-timeout
# see: https://github.com/numba/llvmlite/issues/669
extras = interactive
setenv = linux: PYTEST_FLAGS=--test-napari
passenv = TOXENV,CI,CODECOV_*,GITHUB_ACTIONS,PYTEST_FLAGS,DISPLAY,XAUTHORITY,MPLBACKEND
usedevelop = true
commands =
    python -m pytest --cov --cov-append --cov-report=xml --cov-config={toxinidir}/tox.ini --ignore docs/ {posargs:-vv} {env:PYTEST_FLAGS:}

[testenv:covclean]
description = Clean coverage files.
deps = coverage
skip_install = True
commands = coverage erase

[testenv:coverage]
description = Report the coverage difference.
deps =
    coverage
    diff_cover
skip_install = true
depends = py{38,39,310}-{linux,macos}
parallel_show_output = True
commands =
    coverage report --omit="tox/*"
    coverage xml --omit="tox/*" -o {toxinidir}/coverage.xml
    diff-cover --compare-branch origin/main {toxinidir}/coverage.xml

[testenv:lint]
description = Perform linting.
deps = pre-commit>=3.0.4
skip_install = true
commands = pre-commit run --all-files --show-diff-on-failure {posargs:}

[testenv:clean-docs]
description = Clean the documentation artifacts.
deps =
skip_install = true
changedir = {toxinidir}/docs
allowlist_externals = make
commands = make clean

[testenv:check-docs]
description = Lint the documentation.
deps =
extras = docs
ignore_errors = true
allowlist_externals = make
pass_env = PYENCHANT_LIBRARY_PATH
set_env = SPHINXOPTS = -W -q --keep-going
changedir = {tox_root}{/}docs
commands =
    make linkcheck {posargs}

[testenv:docs]
description = Build the documentation.
deps =
extras = docs
allowlist_externals = make
changedir = {tox_root}{/}docs
commands =
    make html {posargs}
commands_post =
    python -c 'import pathlib; print("Documentation is under:", pathlib.Path("{tox_root}") / "docs" / "_build" / "html" / "index.html")'

[testenv:download-data]
description = Download and cache data.
skip_install = false
deps =
commands = python ./.scripts/ci/download_data.py {posargs}
