name: CI

on:
  schedule:
    - cron: '* * * * 1'  # run every Monday
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.ci-skip-step.outputs.ci-skip }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: ci-skip-step
        uses: mstachniuk/ci-skip@master
        with:
          commit-filter: '[ci skip];[ci-skip];[skip ci];[skip-ci]'
          commit-filter-separator: ';'

  test:
    needs: init
    if: ${{ needs.init.outputs.skip == 'false' }}
    timeout-minutes: 10
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python: [3.8]  # , 3.7, 3.9]
        os: [ubuntu-latest]  # , macos-latest]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions codecov

    - name: Installed automake for leidenalg
      run: |
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          sudo apt install automake
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          brew install automake
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi

    - name: Linting
      run: |
        tox -e lint

    # TODO: enable be once squidpy_notebooks is downloadable without authorization and all links are fine
    #- name: Documentation check
    #  run: |
    #    tox -e docs-check

    - name: Testing
      run: |
        tox
      env:
        PLATFORM: ${{ matrix.platform }}

    - name: Upload coverage to Codecov
      if: success()
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        CODECOV_NAME: ${{ matrix.python }}-${{ matrix.os }}
      run: |
        codecov --no-color --required --flags unittests

  rebuild-examples:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Rebuild tutorials/examples
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          repository: theislab/squidpy_notebooks
          event-type: rebuild
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
